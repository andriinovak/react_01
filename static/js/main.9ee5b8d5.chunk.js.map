{"version":3,"sources":["redux/messages_reducer.js","redux/users_reducers.js","components/Profile/MyPosts/MyPosts.module.css","api/api.js","serviceWorker.js","components/Nav/Nav.js","components/Profile/ProfileInfo/ProfileStatusHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","redux/profile_reducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/AddPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","redux/auth_reducer.js","components/Header/HeaderContainer.js","components/Login/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js","redux/app_reducer.js","redux/redux_store.js","App.js","index.js","api/validators/validatorForm.js","api/FormsControl/FormsControls.module.css","components/Nav/Nav.module.css","components/Users/DownloadAnimation.js","api/FormsControl/FormsControls.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","hoc/AuthRedirectContainer.js"],"names":["addMessageActionCreator","text","type","newMessageTextActionCreator","newMessage","initialState","dialogsData","id","name","messageData","message","newMessageText","messagesReducer","messages","action","newObjMes","length","newMessages","Object","assign","push","users","pageSize","totalUsersCount","currentPage","isDownload","followingInProgres","foll_unfoll","id_num","userId","setCurrentPage","numberCurrentPage","onOffDownloadAnimation","onOffFollowingButton","getDataAboutUsersThunk","numberOfPage","dispatch","UsersAPI","getUsersDataFromServer","then","response","totalCount","items","setFollowUserThunk","setUserFollow","data","resultCode","setUnfollowUserThunk","setUserUnfollow","usersReducer","userFile","usersCopy","item","followed","module","exports","axiosInstance","axios","withCredentials","baseURL","headers","get","post","delete","ProfileApi","getUserProfileData","getStatusFromProfile","updateStatus","status","put","LoginingApi","getMyLoginData","loginToSite","email","password","rememberMe","logoutFromSite","Boolean","window","location","hostname","match","Nav","className","cssStyles","nav","to","link","ProfileStatusHooks","props","useState","editMode","setEditMode","setStatus","useEffect","onClick","autoFocus","onBlur","onChange","e","currentTarget","value","ProfileInfo","profile","content_fon","src","alt","avatar","photos","small","fullName","updateStatusThunk","DownloadAnimation","postsData","newPostText","profileReducer","newObjPost","newProfile","newText","Post","maxLength20","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","MyPosts","React","memo","postsList","profileData","map","key","myposts","createNewPost","MyPostsContainer","connect","state","messageObj","Profile","ProfileContainer","this","params","getUserProfileDataThunk","getStatusFromProfileThunk","Component","compose","withRouter","AuthRedirectContainer","auth","Header","header","loginBlock","isLogined","login","logoutFromSiteThunk","setAuthUserData","getLoginingDataThunk","a","authReducer","HeaderContainer","maxLength30","LoginReduxForm","Input","error","css","summary_error","htmlFor","Login","LoginContainer","submitData","loginToSiteThunk","stopSubmit","_error","initialized","appReducer","reducers","combineReducers","messagesData","usersData","app","formReducer","store","createStore","applyMiddleware","thunkMiddleware","UsersContainer","lazy","MessengesContainer","App","initializeAppThunk","path","fallback","AppContainer","MainAppWithWrapper","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","maxLength","input","meta","formControl","touched","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.9ee5b8d5.chunk.js","sourcesContent":["export const addMessageActionCreator = (text) => {\r\n    return {\r\n        type: 'ADD-MESSAGE',\r\n        text: text,\r\n    }\r\n}\r\nexport const newMessageTextActionCreator = (text) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-TEXT',\r\n        newMessage: text,\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'andrii' },\r\n        { id: 2, name: 'roma' },\r\n    ],\r\n    messageData: [\r\n        { id: 1, message: 'some message 1' },\r\n        { id: 2, message: 'some message 2' },\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst messagesReducer = (messages = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE': {\r\n            let newObjMes = {\r\n                id: messages.messageData.length + 1,\r\n                message: action.text,\r\n            };\r\n            let newMessages = Object.assign({}, messages);\r\n            newMessages.messageData.push(newObjMes);\r\n            // newMessages.newMessageText = '';\r\n            return newMessages;\r\n        }\r\n        case 'UPDATE-NEW-MESSAGE-TEXT': {\r\n            let newMessages = Object.assign({}, messages);\r\n            newMessages.newMessageText = action.newMessage;\r\n            return newMessages;\r\n        }\r\n        default:\r\n            return messages;\r\n    }\r\n}\r\n\r\nexport default messagesReducer;\r\n","import { UsersAPI } from \"../api/api\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isDownload: false,\r\n    followingInProgres: false,\r\n}\r\n\r\nexport const foll_unfoll = (id_num) => {\r\n    return {\r\n        type: 'FOLL_UNFOLL',\r\n        userId: id_num,\r\n    }\r\n}\r\nexport const setUsers = (users, totalCount) => {\r\n    return {\r\n        type: 'SET_USERS',\r\n        users: users,\r\n        totalCount: totalCount,\r\n    }\r\n}\r\nexport const setCurrentPage = (numberCurrentPage) => {\r\n    return {\r\n        type: 'SET_CURRENT_PAGE',\r\n        currentPage: numberCurrentPage,\r\n    }\r\n}\r\nexport const onOffDownloadAnimation = (isDownload) => {\r\n    return {\r\n        type: 'ON_OFF_DOWNLOAD_ANIMATION',\r\n        isDownload: isDownload,\r\n    }\r\n}\r\nexport const onOffFollowingButton = (followingInProgres) => {\r\n    return {\r\n        type: 'ON_OFF_FOLLOWING_BUTTON',\r\n        followingInProgres: followingInProgres,\r\n    }\r\n}\r\n\r\n\r\nconst usersReducer = (userFile = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FOLL_UNFOLL': {\r\n            let usersCopy = Object.assign({}, userFile);\r\n            for (let item of usersCopy.users) {\r\n                if (item.id === action.userId) {\r\n                    item.followed = !item.followed;\r\n                }\r\n            }\r\n            return usersCopy;\r\n        }\r\n        case 'SET_USERS': {\r\n            let usersCopy = Object.assign({}, userFile);\r\n            usersCopy.users = action.users;\r\n            usersCopy.totalUsersCount = action.totalCount;\r\n            return usersCopy;\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            let usersCopy = Object.assign({}, userFile);\r\n            usersCopy.currentPage = action.currentPage;\r\n            return usersCopy;\r\n        }\r\n        case 'ON_OFF_DOWNLOAD_ANIMATION': {\r\n            let usersCopy = Object.assign({}, userFile);\r\n            usersCopy.isDownload = action.isDownload;\r\n            return usersCopy;\r\n        }\r\n        case 'ON_OFF_FOLLOWING_BUTTON': {\r\n            let usersCopy = Object.assign({}, userFile);\r\n            usersCopy.followingInProgres = action.followingInProgres;\r\n            return usersCopy;\r\n        }\r\n        default:\r\n            return userFile;\r\n    }\r\n}\r\n\r\n\r\nexport const getDataAboutUsersThunk = (numberOfPage, pageSize) => {\r\n    return function (dispatch) {\r\n        dispatch(onOffDownloadAnimation(true));\r\n        UsersAPI.getUsersDataFromServer(numberOfPage, pageSize).then(response => {\r\n            dispatch(setUsers(response.items, response.totalCount));\r\n            dispatch(onOffDownloadAnimation(false));\r\n        });\r\n    }\r\n}\r\n\r\nexport const setFollowUserThunk = (userId) => {\r\n    return function (dispatch) {\r\n        dispatch(onOffFollowingButton(true));\r\n        UsersAPI.setUserFollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(foll_unfoll(userId));\r\n                dispatch(onOffFollowingButton(false));\r\n            };\r\n        });\r\n    };\r\n}\r\n\r\nexport const setUnfollowUserThunk = (userId) => {\r\n    return function (dispatch) {\r\n        dispatch(onOffFollowingButton(true));\r\n        UsersAPI.setUserUnfollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(foll_unfoll(userId));\r\n                dispatch(onOffFollowingButton(false));\r\n            };\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2bySL\"};","import * as axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        'API-KEY': 'bb86129e-684c-48de-9d63-9901c8cd3250'\r\n    }\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsersDataFromServer(currentPage = 1, pageSize = 50) {\r\n        return axiosInstance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n    setUserFollow(userId) {\r\n        return axiosInstance.post(`/follow/${userId}`);\r\n    },\r\n\r\n    setUserUnfollow(userId) {\r\n        return axiosInstance.delete(`/follow/${userId}`);\r\n    },\r\n}\r\n\r\n\r\nexport const ProfileApi = {\r\n    getUserProfileData(userId) {\r\n        return axiosInstance.get(`/profile/${userId}`);\r\n    },\r\n    getStatusFromProfile(userId) {\r\n        return axiosInstance.get(`/profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return axiosInstance.put(`/profile/status`, { status: status });\r\n    },\r\n}\r\n\r\nexport const LoginingApi = {\r\n    getMyLoginData() {\r\n        return axiosInstance.get('/auth/me');\r\n    },\r\n\r\n    loginToSite(email, password, rememberMe = false) {\r\n        return axiosInstance.post('/auth/login', { email, password, rememberMe });\r\n    },\r\n\r\n    logoutFromSite() {\r\n        return axiosInstance.delete('/auth/login');\r\n    },\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport cssStyles from './Nav.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className={cssStyles.nav}>\r\n            <Link to='/profile' className={cssStyles.link}>Profile</Link><br />\r\n            <Link to='/messenges' className={cssStyles.link}>Messenges</Link><br />\r\n            {/* <Link to='/news' className={cssStyles.link}>News</Link><br /> */}\r\n            {/* <Link to='/music' className={cssStyles.link}>Music</Link><br /> */}\r\n            <br />\r\n            <Link to='/users' className={cssStyles.link}>Users</Link><br />\r\n            \r\n            {/* <Link to='/settings' className={cssStyles.link}>Settings</Link><br /> */}\r\n            \r\n            <Link to='/login' className={cssStyles.link}>Login</Link><br />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction ProfileStatusHooks(props) {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onClick={onEditMode}>{props.status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={offEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusHooks;","import React from 'react'\r\nimport cssStyles from './ProfileInfo.module.css'\r\nimport DownloadAnimation from '../../Users/DownloadAnimation';\r\nimport ProfileStatusHooks from './ProfileStatusHooks'\r\n\r\n\r\nfunction ProfileInfo(props) {\r\n    if (!props.profile) {\r\n        return <DownloadAnimation />\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <img className={cssStyles.content_fon} src='https://images.wallpaperscraft.ru/image/pliazh_palma_okean_127914_1366x768.jpg' alt='img'></img>\r\n                </div>\r\n                <div>\r\n                    <img className={cssStyles.avatar} src={props.profile.photos.small} alt={props.profile.fullName}></img>\r\n                </div>\r\n                <ProfileStatusHooks status={props.status} updateStatus={props.updateStatusThunk} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import { ProfileApi } from \"../api/api\"\r\n\r\n\r\nexport const addPostActionCreator = (text) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        text: text,\r\n    }\r\n}\r\nexport const newPostTextActionCreator = (text) => {\r\n    return {\r\n        type: 'UPDATE-NEW-POST-TEXT',\r\n        newText: text\r\n    }\r\n}\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: 'SET_USER_PROFILE',\r\n        profile: profile,\r\n    }\r\n}\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: 'SET_STATUS',\r\n        status: status,\r\n    }\r\n}\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, post: 'hello_1' },\r\n        { id: 2, post: 'hello_2' },\r\n        { id: 3, post: 'hello_3' },\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: null,\r\n}\r\n\r\nconst profileReducer = (profile = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newObjPost = {\r\n                id: profile.postsData.length + 1,\r\n                post: action.text,\r\n            };\r\n            let newProfile = Object.assign({}, profile);\r\n            newProfile.postsData.push(newObjPost);\r\n            // newProfile.newPostText = '';\r\n            return newProfile;\r\n        }\r\n        case 'UPDATE-NEW-POST-TEXT': {\r\n            let newProfile = Object.assign({}, profile);\r\n            newProfile.newPostText = action.newText;\r\n            return newProfile;\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            let newProfile = Object.assign({}, profile);\r\n            newProfile.profile = action.profile;\r\n            return newProfile;\r\n        }\r\n        case 'SET_STATUS': {\r\n            let newProfile = Object.assign({}, profile);\r\n            newProfile.status = action.status;\r\n            return newProfile;\r\n        }\r\n        default:\r\n            return profile;\r\n    }\r\n}\r\n\r\nexport const getUserProfileDataThunk = (userId) => {\r\n    return function (dispatch) {\r\n        ProfileApi.getUserProfileData(userId).then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const getStatusFromProfileThunk = (userId) => {\r\n    return function (dispatch) {\r\n        ProfileApi.getStatusFromProfile(userId).then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return function (dispatch) {\r\n        ProfileApi.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import React from 'react'\r\nimport cssStyles from './Post.module.css'\r\n\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={cssStyles.post}>\r\n            <img src='https://avatarko.ru/img/avatar/23/Star_Wars_Yoda_22495.jpg' alt='ava' />\r\n            <span className={cssStyles.item}>{props.id_num}  {props.post}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../../api/validators/validatorForm';\r\nimport { Textarea } from '../../../api/FormsControl/FormsControls';\r\n\r\nlet maxLength20 = maxLengthCreator(20);\r\n\r\nfunction AddPostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"message\" component={Textarea} type=\"text\" placeholder='enter post' validate={[requiredField, maxLength20]} />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'addPostForm'\r\n})(AddPostForm);\r\n\r\n\r\nexport default AddPostReduxForm;\r\n","import React from 'react'\r\nimport cssStyles from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport AddPostReduxForm from './AddPostForm';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsList = props.profileData.postsData.map((item) => <Post id_num={item.id} post={item.post} key={item.id} />);\r\n\r\n    return (\r\n        <div>\r\n            <div className={cssStyles.myposts}>\r\n                <h2>My posts</h2>\r\n            </div>\r\n            <AddPostReduxForm onSubmit={props.createNewPost} />\r\n            <br />\r\n            {postsList}\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profileData: state.profileData,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createNewPost: (messageObj) => {\r\n            dispatch(addPostActionCreator(messageObj.message));\r\n        },\r\n        // onPostChange: (e) => {\r\n        //     let text = e.target.value;\r\n        //     dispatch(newPostTextActionCreator(text));\r\n        // }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfileDataThunk, getStatusFromProfileThunk, updateStatusThunk } from '../../redux/profile_reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { AuthRedirectContainer } from '../../hoc/AuthRedirectContainer'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getUserProfileDataThunk(userId);\r\n        this.props.getStatusFromProfileThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profileData.profile,\r\n        status: state.profileData.status,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    AuthRedirectContainer,\r\n    connect(mapStateToProps, {getUserProfileDataThunk, getStatusFromProfileThunk, updateStatusThunk}),\r\n)(ProfileContainer);\r\n","import React from 'react'\r\nimport cssStyles from './Header.module.css'\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={cssStyles.header}>\r\n            <img src=\"https://image.shutterstock.com/image-vector/dots-letter-c-logo-design-260nw-551769190.jpg\" alt=\"logo\"></img>\r\n            <div className={cssStyles.loginBlock}>\r\n                {props.isLogined\r\n                    ? <div>{props.login} <button onClick={props.logoutFromSiteThunk}>Logout</button></div>\r\n                    : null}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { LoginingApi } from \"../api/api\"\r\nimport { stopSubmit } from \"redux-form\"\r\n\r\nexport const setAuthUserData = (userId, login, email, isLogined) => {\r\n    return {\r\n        type: 'SET_USER_DATA',\r\n        data: {\r\n            userId,\r\n            login,\r\n            email,\r\n            isLogined,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet initialState = {\r\n    isDownload: false,\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isLogined: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getLoginingDataThunk = () => {\r\n    return async function (dispatch) {\r\n        let response = await LoginingApi.getMyLoginData();\r\n        if (response.data.resultCode === 0) {\r\n            let { id, login, email } = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// export const getLoginingDataThunk = () => {\r\n//     return function (dispatch) {\r\n//         return LoginingApi.getMyLoginData().then(response => {\r\n//             if (response.data.resultCode === 0) {\r\n//                 let { id, login, email } = response.data.data;\r\n//                 dispatch(setAuthUserData(id, login, email, true));\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const loginToSiteThunk = (email, password, rememberMe) => {\r\n    return async function (dispatch) {\r\n        let response = await LoginingApi.loginToSite(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getLoginingDataThunk());\r\n        } else {\r\n            dispatch(stopSubmit('loginForm', { _error: response.data.messages }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutFromSiteThunk = () => {\r\n    return async function (dispatch) {\r\n        let response = await LoginingApi.logoutFromSite();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react'\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logoutFromSiteThunk } from '../../redux/auth_reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogined: state.auth.isLogined,\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    logoutFromSiteThunk,\r\n})(HeaderContainer);\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Input } from '../../api/FormsControl/FormsControls';\r\nimport { requiredField, maxLengthCreator } from '../../api/validators/validatorForm';\r\nimport css from '../../api/FormsControl/FormsControls.module.css'\r\n\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\n\r\nfunction LoginForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"login\" component={Input} type=\"text\" placeholder='login' validate={[requiredField, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\" component={Input} type=\"password\" placeholder='password' validate={[requiredField, maxLength30]} />\r\n            </div>\r\n            {props.error && <div className={css.summary_error}>{props.error}</div>}\r\n            <div>\r\n                <label htmlFor=\"rememberMe\">rememberMe</label>\r\n                <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'loginForm'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm;\r\n","import React from 'react'\r\nimport LoginReduxForm from './LoginForm';\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={props.onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from './Login'\r\nimport { connect } from 'react-redux'\r\nimport { loginToSiteThunk, logoutFromSiteThunk } from '../../redux/auth_reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onSubmit = (submitData) => {\r\n        this.props.loginToSiteThunk(submitData.login, submitData.password, submitData.rememberMe);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.props.isLogined) return <Redirect to='/profile' />\r\n\r\n        return (\r\n            <Login onSubmit={this.onSubmit} />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLogined: state.auth.isLogined,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginToSiteThunk, logoutFromSiteThunk })(LoginContainer);\r\n","import { getLoginingDataThunk } from './auth_reducer'\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const setInitializedData = () => {\r\n    return {\r\n        type: 'SET_INITIALIZED',\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializeAppThunk = () => {\r\n    return function (dispatch) {\r\n        let promise = dispatch(getLoginingDataThunk());\r\n        promise.then(() => {\r\n            dispatch(setInitializedData());\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport profileReducer from './profile_reducer'\r\nimport messagesReducer from './messages_reducer'\r\nimport usersReducer from './users_reducers'\r\nimport authReducer from './auth_reducer'\r\nimport appReducer from './app_reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profileData: profileReducer,\r\n    messagesData: messagesReducer,\r\n    usersData: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\n\nimport { Route, BrowserRouter } from 'react-router-dom';\n// import MessengesContainer from './components/Messenges/MessengesContainer';\n// import UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport { initializeAppThunk } from './redux/app_reducer';\nimport { connect } from 'react-redux';\nimport DownloadAnimation from './components/Users/DownloadAnimation'\nimport { Provider } from 'react-redux'\nimport store from './redux/redux_store'\n\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst MessengesContainer = React.lazy(() => import('./components/Messenges/MessengesContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeAppThunk();\n  }\n\n  render() {\n    if (!this.props.initialized) return <DownloadAnimation />\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Nav />\n        <div className='content_info'>\n\n          <Route path='/profile/:userId?'>\n            <ProfileContainer />\n          </Route>\n          <Suspense fallback={<DownloadAnimation />}>\n            <Route path='/messenges'>\n              <MessengesContainer />\n            </Route>\n\n            <Route path='/users'>\n              <UsersContainer />\n            </Route>\n          </Suspense>\n          <Route path='/login'>\n            <LoginContainer />\n          </Route>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized,\n  }\n}\n\nlet AppContainer = connect(mapStateToProps, { initializeAppThunk })(App);\n\nexport default function MainAppWithWrapper() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainAppWithWrapper from './App';\n\n\nReactDOM.render(\n    // <React.StrictMode>\n\n            <MainAppWithWrapper />,\n\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__17Zyv\",\"error\":\"FormsControls_error__3n5NQ\",\"summary_error\":\"FormsControls_summary_error__2ArJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1_nX0\",\"link\":\"Nav_link__3Utf1\"};","import React from 'react'\r\nimport './DownloadAnimation.css'\r\n\r\nfunction DownloadAnimation() {\r\n    return (\r\n        <div className='lds-roller'>\r\n            <div>\r\n                </div>\r\n                <div>\r\n                    </div>\r\n                    <div>\r\n                        </div>\r\n                        <div>\r\n                            </div>\r\n                            <div>\r\n                        </div>\r\n                        <div>\r\n                    </div>\r\n                    <div>\r\n                </div>\r\n                <div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DownloadAnimation;\r\n","import React from 'react'\r\nimport css from './FormsControls.module.css'\r\n\r\n\r\nexport function Textarea({ input, meta, props }) {\r\n    return (\r\n        <div className={css.formControl + ' ' + (meta.touched && meta.error ? css.error : '')}>\r\n            <textarea {...input} {...props} />\r\n            <div>\r\n                {\r\n                    meta.touched && meta.error && <span>{meta.error}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Input({ input, meta, props }) {\r\n    return (\r\n        <div className={css.formControl + ' ' + (meta.touched && meta.error ? css.error : '')}>\r\n            <input {...input} {...props} />\r\n            <div>\r\n                {\r\n                    meta.touched && meta.error && <span>{meta.error}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_fon\":\"ProfileInfo_content_fon__evWb5\",\"avatar\":\"ProfileInfo_avatar__XQGdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__mQHiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__nIIrY\",\"loginBlock\":\"Header_loginBlock__Gm_zn\",\"loginLink\":\"Header_loginLink__kkj_F\"};","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction mapStateToPropsForRedirect(state) {\r\n    return {\r\n        isLogined: state.auth.isLogined,\r\n    }\r\n}\r\n\r\nexport function AuthRedirectContainer(Component) {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isLogined) return <Redirect to={'/login'} />;\r\n            return (\r\n                <Component {...this.props} />\r\n            );\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}\r\n"],"sourceRoot":""}