{"version":3,"sources":["components/Messenges/Messenges.module.css","components/Messenges/DialogItem/DialogItem.js","components/Messenges/MessageItem/MessageItem.js","components/Messenges/AddMessageForm.js","components/Messenges/Messenges.js","components/Messenges/MessengesContainer.js"],"names":["module","exports","DialogItem","props","path","id_num","to","name","MessageItem","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","type","placeholder","validate","requiredField","Messenges","listData","messagesData","dialogsData","map","item","id","key","messData","messageData","className","cssStyle","dialogs","dialogs_items","messages","createNewMessage","compose","connect","state","dispatch","messageObj","addMessageActionCreator","onMessageChange","e","text","target","value","newMessageTextActionCreator","AuthRedirectContainer"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,cAAgB,iCAAiC,SAAW,8B,+FCWpGC,MATf,SAAoBC,GAChB,IAAIC,EAAO,YAAcD,EAAME,OAC/B,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAIF,GAAOD,EAAMI,QCGpBC,MARf,SAAqBL,GACjB,OACI,6BACKA,EAAMM,U,kCCAfC,EAAcC,YAAiB,IAenC,IAMeC,EANaC,YAAU,CAElCC,KAAM,kBAFkBD,EAb5B,SAAwBV,GACpB,OACI,0BAAMY,SAAUZ,EAAMa,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOV,KAAK,UAAUW,UAAWC,IAAUC,KAAK,OAAOC,YAAY,gBAAgBC,SAAU,CAACC,IAAeb,MAEjH,6BACI,4BAAQU,KAAK,UAAb,oBCYDI,MApBf,SAAmBrB,GAGf,IAAIsB,EAAWtB,EAAMuB,aAAaC,YAAYC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAYtB,KAAMsB,EAAKtB,KAAMF,OAAQwB,EAAKC,GAAIC,IAAKF,EAAKC,QAChHE,EAAW7B,EAAMuB,aAAaO,YAAYL,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAaxB,OAAQwB,EAAKC,GAAIrB,QAASoB,EAAKpB,QAASsB,IAAKF,EAAKC,QAG3H,OACI,yBAAKI,UAAWC,IAASC,SACrB,yBAAKF,UAAWC,IAASE,eACpBZ,GAEL,yBAAKS,UAAWC,IAASG,UACpBN,EACD,kBAAC,EAAD,CAAqBjB,SAAUZ,EAAMoC,sB,sBCMtCC,sBACXC,aApBJ,SAAyBC,GACrB,MAAO,CACHhB,aAAcgB,EAAMhB,iBAK5B,SAA4BiB,GACxB,MAAO,CACHJ,iBAAkB,SAACK,GACfD,EAASE,YAAwBD,EAAWnC,WAEhDqC,gBAAiB,SAACC,GACd,IAAIC,EAAOD,EAAEE,OAAOC,MACpBP,EAASQ,YAA4BH,SAO7CI,IAFWZ,CAGbhB","file":"static/js/4.5854d8ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messenges_dialogs__3ERIe\",\"dialogs_items\":\"Messenges_dialogs_items__1_HE4\",\"messages\":\"Messenges_messages__15rRf\"};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction DialogItem(props) {\r\n    let path = '/dialogs/' + props.id_num;\r\n    return(\r\n        <div>\r\n            <Link to={path}>{props.name}</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react'\r\n\r\nfunction MessageItem(props) {\r\n    return(\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../api/validators/validatorForm';\r\nimport { Textarea } from '../../api/FormsControl/FormsControls';\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\n\r\nfunction AddMessageForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"message\" component={Textarea} type=\"text\" placeholder='enter message' validate={[requiredField, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'addMessageForm'\r\n})(AddMessageForm);\r\n\r\n\r\nexport default AddMessageReduxForm;\r\n","import React from 'react'\r\nimport cssStyle from './Messenges.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport AddMessageReduxForm from './AddMessageForm';\r\n\r\nfunction Messenges(props) {\r\n\r\n\r\n    let listData = props.messagesData.dialogsData.map((item) => <DialogItem name={item.name} id_num={item.id} key={item.id} />);\r\n    let messData = props.messagesData.messageData.map((item) => <MessageItem id_num={item.id} message={item.message} key={item.id} />);\r\n\r\n\r\n    return(\r\n        <div className={cssStyle.dialogs}>\r\n            <div className={cssStyle.dialogs_items}>\r\n                {listData}\r\n            </div>\r\n            <div className={cssStyle.messages}>\r\n                {messData}\r\n                <AddMessageReduxForm onSubmit={props.createNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messenges;\r\n","import { addMessageActionCreator, newMessageTextActionCreator } from '../../redux/messages_reducer';\r\nimport Messenges from './Messenges';\r\nimport { connect } from 'react-redux';\r\nimport { AuthRedirectContainer } from '../../hoc/AuthRedirectContainer';\r\nimport { compose } from 'redux';\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        messagesData: state.messagesData,\r\n        // isLogined: state.auth.isLogined,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createNewMessage: (messageObj) => {\r\n            dispatch(addMessageActionCreator(messageObj.message));\r\n        },\r\n        onMessageChange: (e) => {\r\n            let text = e.target.value;\r\n            dispatch(newMessageTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirectContainer\r\n)(Messenges);\r\n"],"sourceRoot":""}